openapi: 3.0.0
info:
  title: HighPerformance Api documentation
  version: 1.0.0
  description: Documentation of the REST API
servers:
  - url: http://localhost:4200/api
    description: Local development server
tags:
  - name: User
    description: Endpoints for user authentication
  - name: Salesman
    description: Endpoints for managing salesmen
  - name: Products
    description: Endpoints for managing products and sales-orders
  - name: Bonus
    description: Endpoints for calculating and fetching bonuses
  - name: OrangeHRM
    description: Endpoints for fetching and updating data from OrangeHRM
paths:
  /login:
    post:
      tags:
        - User
      summary: User login
      description: Login with username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized
    delete:
      tags:
        - User
      summary: User logout
      description: Logout the current user
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized
  /register:
    post:
      tags:
        - User
      summary: Register a new user
      description: Register a new user with username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request
  /checkUsername:
    get:
      tags:
        - User
      summary: Check if username is valid
      description: Check if the provided username is valid
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Username is valid
        '400':
          description: Bad request
  /user:
    get:
      tags:
        - User
      summary: Get user information
      description: Retrieve information about the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  role:
                    type: string
        '401':
          description: Unauthorized
  /salesman:
    get:
      tags:
        - Salesman
      summary: Get all salesmen
      description: Retrieve a list of all salesmen
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of salesmen retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salesman'
        '401':
          description: Unauthorized
  /salesman/{id}:
    get:
      tags:
        - Salesman
      summary: Get a salesman by ID
      description: Retrieve a salesman by their ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Salesman retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salesman'
        '404':
          description: Salesman not found
        '401':
          description: Unauthorized
  /products/sales:
    get:
      tags:
        - Products
      summary: Get all sales
      description: Retrieve a list of all sales
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of sales retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
        '401':
          description: Unauthorized
  /salesmanohrm:
    get:
      tags:
        - OrangeHRM
      summary: Get all salesmen from OrangeHRM
      description: Retrieve a list of all salesmen from OrangeHRM
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of salesmen from OrangeHRM retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salesman'
        '401':
          description: Unauthorized
  /salesmanohrm/{id}:
    get:
      tags:
        - OrangeHRM
      summary: Get salesman from OrangeHRM by ID
      description: Retrieve information about a specific salesman from OrangeHRM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Salesman information from OrangeHRM retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salesman'
        '401':
          description: Unauthorized
  /odoo/salesman:
    get:
      tags:
        - Odoo
      summary: Get all salesmen from Odoo
      description: Retrieve a list of all salesmen from Odoo
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of salesmen from Odoo retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salesman'
        '401':
          description: Unauthorized
  /odoo/salesman/{id}:
    get:
      tags:
        - Odoo
      summary: Get salesman from Odoo by ID
      description: Retrieve information about a specific salesman from Odoo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Salesman information from Odoo retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salesman'
        '401':
          description: Unauthorized
  /odoo/bonus/{id}:
    get:
      tags:
        - Odoo
      summary: Get bonus from Odoo by ID
      description: Retrieve bonus information from Odoo by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Bonus information from Odoo retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bonus'
        '401':
          description: Unauthorized
  /eval:
    get:
      tags:
        - Evaluation
      summary: Get all evaluations
      description: Retrieve a list of all evaluations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of evaluations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
        '401':
          description: Unauthorized
  /eval/{id}/{year}:
    get:
      tags:
        - Evaluation
      summary: Get evaluation by ID and year
      description: Retrieve information about a specific evaluation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Evaluation information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '401':
          description: Unauthorized
    post:
      tags:
        - Evaluation
      summary: Create evaluation
      description: Create a new evaluation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                score:
                  type: number
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Evaluation created successfully
        '401':
          description: Unauthorized
    put:
      tags:
        - Evaluation
      summary: Update evaluation
      description: Update an existing evaluation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                year:
                  type: integer
                score:
                  type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Evaluation updated successfully
        '401':
          description: Unauthorized
  /bonus/spr:
    post:
      tags:
        - Bonus
      summary: Recalculate SPR bonus
      description: Recalculate the SPR bonus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                amount:
                  type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: SPR bonus recalculated successfully
        '401':
          description: Unauthorized
components:
  schemas:
    Salesman:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Sale:
      type: object
      properties:
        id:
          type: string
        product:
          type: string
        quantity:
          type: integer
    Bonus:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
    Evaluation:
      type: object
      properties:
        id:
          type: string
        year:
          type: integer
        score:
          type: number
    Credentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string